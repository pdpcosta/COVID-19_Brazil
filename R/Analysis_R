library(tidyverse)
library(gganimate)
library(magick)
data = read.csv("~/Desktop/untitled folder/Brazil DashBoard/Top10.csv")
#data <- read.csv("https://raw.githubusercontent.com/pdpcosta/COVID-19_Brazil/master/COVID-19_Brazil_States_CONFIRMED.csv")

data$Date<-as.POSIXct(data$Date)
#pbz1<-ggplot(data,aes(data$Date,data$Confirmed, color= data$State, size = data$Confirmed, shape= data$Region)) +geom_point()
pbz<-ggplot(data,aes(data$Date,data$Confirmed, color= data$State, size = data$Confirmed)) +geom_point()

PLOT<- pbz+ theme_bw() +
  # gganimate specific bits:
  labs(title = 'Date: {frame_time} Daily COVID19 cases in Top 10 States of Brazil by:Kirti Sundar Sahu (Updated as on March 30,2020)', x = 'Date', y = 'Confirmed case of COVID19') +
  transition_time(data$Date) +
  ease_aes('linear') +
  shadow_mark()
animate(PLOT,height = 600, width =1200,res = 100,renderer = gifski_renderer("covid19_Brazil.gif"))


####ShinyApp Dashboard for Brazil_COVID19

library(shiny)
library(ggplot2)
library(tidyverse)
library(gganimate)
library(magick)
#data <- read.csv("https://raw.githubusercontent.com/pdpcosta/COVID-19_Brazil/master/COVID-19_Brazil_States_CONFIRMED.csv")
brazil_data=read.csv("data.csv")
data<-drop_na(data)
brazil_data$Date<-as.POSIXct(brazil_data$Date)

ui <- fluidPage(
  title = "Dashboard Brazil for COVID19",
  varSelectInput("variable", "Variable:", brazil_data),
  dateRangeInput("Daterange", "Dashboard Brazil for COVID19", 
                 start  = "2020-02-25",
                 end    = "2020-03-24",
                 min    = "2020-01-01",
                 max    = "2020-03-24",
                 format = "mm/dd/yyyy",
                 separator = " to "),
  plotOutput("plot1")
)

server <- function(input, output) {
  output$plot1 <- renderPlot({
    ggplot(brazil_data,aes(brazil_data$Date,brazil_data$Confirme,, color= brazil_data$State, size = brazil_data$Confirmed, shape= brazil_data$Region)) +geom_point()+ theme_bw() +
      # gganimate specific bits:
      labs(title = 'Date: {frame_time} Prepared by:Kirti Sundar Sahu (Updated as on March 24,2020)', x = 'Date', y = 'Confirmed case of COVID19') +
      transition_time(brazil_data$Date) +
      ease_aes('linear') +
      shadow_mark()
  })
}

shinyApp(server = server,ui=ui)


#############Shiny Dashboard
library(shiny)
library(plotly)
library(tidyverse)
#data <- read.csv("https://raw.githubusercontent.com/pdpcosta/COVID-19_Brazil/master/COVID-19_Brazil_States_CONFIRMED.csv")
brazil_data=read.csv("data.csv")
brazil_data<-drop_na(brazil_data)
brazil_data$Date<-as.POSIXct(brazil_data$Date)

library(shinydashboard)
p=ggplot(brazil_data,aes(brazil_data$Date,brazil_data$Confirme,color= brazil_data$Region, size = brazil_data$Confirmed,text = brazil_data$State)) +geom_point(frame = brazil_data$Date)

ui <- dashboardPage(
  dashboardHeader(title = "Brazil COVID19 Dashboard"),
  dashboardSidebar(),
  dashboardBody(
    fluidRow(
      box(plotlyOutput("plot1")),
      box(
        title = "Confirmed cases of COVID19 cases in Brazil as on March 26, 2020",
        ),
      fluidRow(
        # A static valueBox
        valueBox(2985, "Confirmed cases", icon = icon("hospital"),color = "red"),
        valueBox(77, "No of Death", icon = icon("danger"),color = "blue"),
        valueBox(6, "No Recovered", icon = icon("leaf"),color = "green"),
      )
    )
  )
)

server <- function(input, output) {
  set.seed(122)
  brazil_data=read.csv("data.csv")
  
  output$plot1 <- renderPlotly({
    #ggplot(brazil_data,aes(brazil_data$Date,brazil_data$Confirme,color= brazil_data$Region, size = brazil_data$Confirmed,text = brazil_data$State)) +geom_point(frame = brazil_data$Date, ids =brazil_data$State)
    plot_ly(x=brazil_data$Date,y=brazil_data$Confirme, size = brazil_data$Confirmed, color = brazil_data$Region, text = brazil_data$State,type = 'scatter',mode = 'markers')
  })
}

shinyApp(ui, server)
