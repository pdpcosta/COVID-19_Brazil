library(tidyverse)
library(gganimate)
library(magick)

data <- read.csv("https://raw.githubusercontent.com/pdpcosta/COVID-19_Brazil/master/COVID-19_Brazil_States_CONFIRMED.csv")
data$Date<-as.POSIXct(data$Date)
pbz<-ggplot(data,aes(data$Date,data$Confirmed, color= data$State, size = data$Confirmed, shape= data$Region)) +geom_point()
PLOT<- pbz+ theme_bw() +
  # gganimate specific bits:
  labs(title = 'Date: {frame_time} Prepared by:Kirti Sundar Sahu (Updated as on March 24,2020)', x = 'Date', y = 'Confirmed case of COVID19') +
  transition_time(data$Date) +
  ease_aes('linear') +
  shadow_mark()
animate(PLOT,height = 600, width =1200,renderer = gifski_renderer("covid19_Brazil.gif"))

####ShinyApp Dashboard for Brazil_COVID19

library(shiny)
library(ggplot2)
library(tidyverse)
library(gganimate)
library(magick)
#data <- read.csv("https://raw.githubusercontent.com/pdpcosta/COVID-19_Brazil/master/COVID-19_Brazil_States_CONFIRMED.csv")
brazil_data=read.csv("data.csv")
data<-drop_na(data)
brazil_data$Date<-as.POSIXct(brazil_data$Date)

ui <- fluidPage(
  title = "Dashboard Brazil for COVID19",
  varSelectInput("variable", "Variable:", brazil_data),
  dateRangeInput("Daterange", "Dashboard Brazil for COVID19", 
                 start  = "2020-02-25",
                 end    = "2020-03-24",
                 min    = "2020-01-01",
                 max    = "2020-03-24",
                 format = "mm/dd/yyyy",
                 separator = " to "),
  plotOutput("plot1")
)

server <- function(input, output) {
  output$plot1 <- renderPlot({
    ggplot(brazil_data,aes(brazil_data$Date,brazil_data$Confirme,, color= brazil_data$State, size = brazil_data$Confirmed, shape= brazil_data$Region)) +geom_point()+ theme_bw() +
      # gganimate specific bits:
      labs(title = 'Date: {frame_time} Prepared by:Kirti Sundar Sahu (Updated as on March 24,2020)', x = 'Date', y = 'Confirmed case of COVID19') +
      transition_time(brazil_data$Date) +
      ease_aes('linear') +
      shadow_mark()
  })
}

shinyApp(server = server,ui=ui)
